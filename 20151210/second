引擎：
	mysql的引擎有很多种，mysql5.5之后的默认引擎是innodb，之前的是myisam。只有innodb和bdb提供事务安全表。
	修改引擎：alter table `user_salay` engine=myisam;
特性：
	myisam：
		批量插入效率高，空间使用低，内存使用低，不支持外键，访问速度快，以select和insert为主的应用基本可使用
		有3种存储格式：
			1. 静态（固定长度）表（默认）
				由于每个记录都是固定长度的，所以相对动态表说占用的空间更多。如果存储的数据不够长度，会自动用空格填补，但是获取的时候，空格却已经被处理了。因此获取不到后面的空格。
				存储的速度非常快，容易缓存，出错易恢复。
			2. 动态表
				占用空间少，频繁的更新和删除记录会产生碎片，需要定时处理。
			3. 压缩表
				每个记录都是被单独压缩，所以只要非常小的访问开支。
		每个myisam在磁盘上面存储为3个文件，文件名都和表明相同，但是扩展名分别为
			.frm  :存储表定义
			.MYD : MYDATA 存储数据
			.MYI  :  MYIndex 存储索引
	innodb ：
		批量插入效率低，空间使用高，内存使用高，支持外键
	memory :
		存在于内存中的内容来创建表，这种表存在内存中，因此访问的速度很快，但是存储量会受到内存的限制，并且一旦服务停止，那么数据也会丢失。所以适合做统计而不经常改变的数据，不能做更新插入，因为不能把数据保存在硬盘。
	tokudb : 第三方数据库引擎
	如何选择：
		根据需要和实际的情况选择
			myisam：读操作插入操作为主，很少的删除和更新操作。对事务的完整性和并发性不高。
			innodb：对于事务要求比较高，数据的一致性，事务的完整提交和回滚，对删除和更新的锁定降低，支持外键
			memory：
			merge：一系列等同的myisam表以逻辑方式组合在一起，并且作为一个对象引用他们。优点在于突破单个myisam表大小限制，并且通过将不同的表分布在多个磁盘。
			
数据类型：
	char 和 varchar：
		char是固定长度的，所以在存储的速度上面存在优势。
		varchar是可变长度，所以更能节省存储空间。
		然而根据不同的数据库引擎，所选择的数据类型也有区别：
			myisam：建议固定长度的char
			innodb：更多的建议使用varchar	
	text 和 blob：执行大量的删除操作后，会留下很多的空洞。可以OPTIMIZE TABLE功能进行碎片整理。
		text：text mediumtext longtext 主要存储字节
		blob : blob mediumblob longtext 主要存储二进制文件，比如图片
		
设计索引原则：
	1. 搜索的索引列，不一定是需要select的关键字，更适合索引的是出现在where语句中的列。
	2. 使用唯一索引，索引列的基数越大，索引效果越好。例如：男，女都各占一半，而以此为索引没什么效果。而对于出生日期这种，效果就可以很好。
	3. 短索引，对于长度一定的字符串进行索引，可以以字符串前10,20个字符为索引。
	4. 最左索引，创建一个n列的索引时，以最左的索引来匹配行。
	5. 不能过渡使用索引。浪费内存，影响速度。
	
	