1. Download and install the Public Signing Key:
	wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
	
2. Save the repository definition to /etc/apt/sources.list.d/elasticsearch-2.x.list:
	echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list

3. Run apt-get update and the repository is ready for use. You can install it with:
	sudo apt-get update && sudo apt-get install elasticsearch

4. Configure Elasticsearch to automatically start during bootup. If your distribution is using SysV init, then you will need to run:
	sudo update-rc.d elasticsearch defaults 95 10

5.Otherwise if your distribution is using systemd:
	sudo /bin/systemctl daemon-reload
	sudo /bin/systemctl enable elasticsearch.service
	
6. start
	sudo update-rc.d elasticsearch defaults 95 10
	sudo /etc/init.d/elasticsearch start
	
	sudo /sbin/chkconfig --add elasticsearch
	sudo service elasticsearch start
	
	sudo /bin/systemctl daemon-reload
	sudo /bin/systemctl enable elasticsearch.service
	sudo /bin/systemctl start elasticsearch.service
	
7. install mobz/elasticsearch-head
	sudo elasticsearch/bin/plugin install mobz/elasticsearch-head
	
	-----------------------------------------------------------------------------------------------------------------------------
	curl -L -O https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.2.0/elasticsearch-2.2.0.tar.gz
	
	tar -xvf elasticsearch-2.2.0.tar.gz
	
	cd elasticsearch-2.2.0/bin
	
	./elasticsearch
	
	./elasticsearch --cluster.name my_cluster_name --node.name my_node_name
	
	curl 'localhost:9200/_cat/health?v'
	
	curl 'localhost:9200/_cat/nodes?v'
	
	curl 'localhost:9200/_cat/indices?v'
	
	curl -XPUT 'localhost:9200/customer?pretty'
	curl 'localhost:9200/_cat/indices?v'
	
	curl -XPUT 'localhost:9200/customer/external/1?pretty' -d '
	{
	  "name": "John Doe"
	}'
	
	curl -XGET 'localhost:9200/customer/external/1?pretty'
	
	curl -XDELETE 'localhost:9200/customer?pretty'
	curl 'localhost:9200/_cat/indices?v'
	
	curl -X<REST Verb> <Node>:<Port>/<Index>/<Type>/<ID>
	
	curl -XPOST 'localhost:9200/customer/external/1/_update?pretty' -d '
{
  "doc": { "name": "Jane Doe" }
}'

curl -XPOST 'localhost:9200/customer/external/1/_update?pretty' -d '
{
  "script" : "ctx._source.age += 5"
}'

curl -XDELETE 'localhost:9200/customer/external/2?pretty'

curl -XPOST 'localhost:9200/customer/external/_bulk?pretty' -d '
{"index":{"_id":"1"}}
{"name": "John Doe" }
{"index":{"_id":"2"}}
{"name": "Jane Doe" }

curl 'localhost:9200/bank/_search?q=*&pretty'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_all": {} }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "size": 1
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "from": 10,
  "size": 10
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "sort": { "balance": { "order": "desc" } }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_all": {} },
  "_source": ["account_number", "balance"]
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match": { "account_number": 20 } }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match": { "address": "mill lane" } }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": { "match_phrase": { "address": "mill lane" } }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": {
    "bool": {
      "must": [
        { "match": { "address": "mill" } },
        { "match": { "address": "lane" } }
      ]
    }
  }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": {
    "bool": {
      "should": [
        { "match": { "address": "mill" } },
        { "match": { "address": "lane" } }
      ]
    }
  }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": {
    "bool": {
      "must_not": [
        { "match": { "address": "mill" } },
        { "match": { "address": "lane" } }
      ]
    }
  }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": {
    "bool": {
      "must": [
        { "match": { "age": "40" } }
      ],
      "must_not": [
        { "match": { "state": "ID" } }
      ]
    }
  }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "query": {
    "bool": {
      "must": { "match_all": {} },
      "filter": {
        "range": {
          "balance": {
            "gte": 20000,
            "lte": 30000
          }
        }
      }
    }
  }
}'
	

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "size": 0,
  "aggs": {
    "group_by_state": {
      "terms": {
        "field": "state"
      }
    }
  }
}'


curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "size": 0,
  "aggs": {
    "group_by_state": {
      "terms": {
        "field": "state"
      },
      "aggs": {
        "average_balance": {
          "avg": {
            "field": "balance"
          }
        }
      }
    }
  }
}'

curl -XPOST 'localhost:9200/bank/_search?pretty' -d '
{
  "size": 0,
  "aggs": {
    "group_by_state": {
      "terms": {
        "field": "state",
        "order": {
          "average_balance": "desc"
        }
      },
      "aggs": {
        "average_balance": {
          "avg": {
            "field": "balance"
          }
        }
      }
    }
  }
}'
	